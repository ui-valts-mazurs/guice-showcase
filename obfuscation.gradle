configurations {
    yguardRuntime.extendsFrom compile, compileOnly
}

dependencies {
    yguardRuntime 'com.yworks:yguard:2.9.+'
}

task obfuscate {
    dependsOn jar
    group 'yGuard'
    description 'Obfuscates and shrinks the java archive.'

    def archivePath = jar.archiveFile.get().asFile.path
    def outputArchivePath = archivePath.replace(".jar", "-obfuscated.jar")
    outputs.file(outputArchivePath)

    doLast {

        ant.taskdef(
                name: 'yguard',
                classname: 'com.yworks.yguard.YGuardTask',
                classpath: configurations.yguardRuntime.asPath
        )

        ant.yguard {
            inoutpair(in: archivePath, out: outputArchivePath)

            rename(mainclass: application.mainClassName, logfile: "${buildDir}/yguard.log.xml") {
                property(name: "error-checking", value: "pedantic")
            }
        }
    }
}

task obfuscatedFatJar(type: Jar) {
    dependsOn obfuscate
    group 'yGuard'
    description 'Builds fat JAR with obfuscated application'

    manifest {
        attributes 'Main-Class': application.mainClassName
    }

    archiveBaseName.set("${project.name}-fat-obfuscated")

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from {
        obfuscate.outputs.files.collect { zipTree(it) }
    }
}